/* CREATION TABLE etudiant */
CREATE TABLE etudiant
(
	num INTEGER PRIMARY KEY,
	nom VARCHAR2 (50) NOT NULL,
	prenom VARCHAR2 (50),
	anniversaire VARCHAR2 (10),
	niveau VARCHAR2 (2) CHECK ( Niveau IN ('1','2','AS','LP')),
	groupe NUMBER (1),
	departement VARCHAR2 (15)
);


/* CREATION TABLE cours */
CREATE TABLE cours
(
	num VARCHAR2 (10) PRIMARY KEY,
	intitule VARCHAR2 (80)
);

/* CREATION TABLE moyenneNotation */
CREATE TABLE moyenne
(
	numEtudiant INTEGER,
	numCours VARCHAR2(10),
	moyenne NUMBER(4),
	CONSTRAINT Fkey1 FOREIGN KEY (numEtudiant) REFERENCES etudiant(num),
	CONSTRAINT Fkey2 FOREIGN KEY (numCours) REFERENCES cours(num),
	CONSTRAINT Pkey PRIMARY KEY (numEtudiant,numCours)
);

/* PEUPLEMENT DES TABLES */
INSERT INTO etudiant
VALUES (15,'Dupond','Jacques','10/11/1977','2',2,'Informatique');
INSERT INTO etudiant
VALUES (222,'Dupre','Erneste','15/02/1978','2',2,'GMP');
INSERT INTO etudiant
VALUES (345,'La Folie','Pierre','23/09/1979','1',3,'Biologie');
INSERT INTO etudiant
VALUES (346,'Dupond','Claire','23/10/1978','AS',4,'Informatique');
INSERT INTO etudiant
VALUES (543,'Durant','Pauline','25/10/1978','LP',4,'Informatique');
INSERT INTO etudiant
VALUES (955,'Larue','Jean','02/02/1976','2',1,'Informatique');
INSERT INTO etudiant
VALUES (956,'Le Poete','Jean','03/10/1975','1',1,'Informatique');

INSERT INTO cours
VALUES ('CX44','Mathematiques');
INSERT INTO cours
VALUES ('CX56','Informatique');
INSERT INTO cours
VALUES ('UZ34','Commerce international');

INSERT INTO moyenne
VALUES (15,'CX44',12);
INSERT INTO moyenne
VALUES (222,'CX56',8);
INSERT INTO moyenne
VALUES (345,'UZ34',18);
INSERT INTO moyenne
VALUES (346,'CX44',14);
INSERT INTO moyenne
VALUES (543,'CX56',3.5);
INSERT INTO moyenne
VALUES (955,'UZ34',9);
INSERT INTO moyenne
VALUES (956,'CX44',13.5);

/* REQUETES */
/* 1) Affichez les noms et prénoms des étudiants de 1ère année, dans l'ordre alphabétique */
SELECT nom,prenom
FROM etudiant
WHERE niveau='1'
ORDER BY nom,prenom asc;

/* 2) Affichez les noms et prénoms des étudiants dont la première lettre de nom est comprise entre A et C */
SELECT nom,prenom
FROM etudiant
WHERE nom BETWEEN 'A' AND 'C';

/* 3) Affichez les noms et prénoms des étudiants dont le nom ressemble à « … Du… » */
SELECT nom,prenom 
FROM etudiant
WHERE nom LIKE '%Du%';

/* 4) Affichez les noms et prénoms des étudiants du département informatique nés en 1977 et 1978 */
SELECT nom,prenom
FROM etudiant
WHERE departement='Informatique' AND (Anniversaire LIKE '%/%/1977' OR Anniversaire LIKE '%/%/1978');

/* 5) Affichez les noms et prénoms des étudiants en précisant leur âge. La fonction SYSDATE permet 
	  de fournir la date d’aujourd’hui. */
SELECT nom, prenom,extract(YEAR FROM SYSDATE)- extract(YEAR FROM TO_DATE(anniversaire))
FROM Etudiant;

/* 6) Affichez les étudiants qui n’ont pas de date d’anniversaire */
SELECT * 
FROM Etudiant
WHERE anniversaire IS NULL;

/* 7) Affichez la liste des étudiants de deuxième année qui ont eu la moyenne dans la matière CX56 */
SELECT * 
FROM Etudiant
JOIN Moyenne ON Etudiant.num = Moyenne.numEtudiant
WHERE niveau='2' AND moyenne>=10 AND numCours='CX56';

/* 8) Affichez, pour chaque matière, la note minimale attribuée, la note maximale, la note moyenne */
SELECT numCours, MIN(moyenne), MAX(moyenne), AVG(moyenne)
FROM Moyenne
GROUP BY numCours;

/* 9) Affichez le classement des étudiants. Vous devez utiliser la moyenne générale de chaque
      étudiant (cette moyenne doit être calculée en sachant que toutes les matières ont le 
	  même coefficient) */
SELECT nom,prenom,AVG(moyenne)
FROM moyenne m
JOIN etudiant e ON m.numEtudiant=e.num
GROUP BY numEtudiant,nom,prenom
ORDER BY AVG(moyenne) DESC;

/* 10) Faitez en sorte que GMP soit remplacé par « Génie Mécanique et Productique » dans la table " étudiants " */
ALTER TABLE etudiant
MODIFY departement VARCHAR2(50);

UPDATE etudiant
SET departement = 'Génie Mécanique et Productique'
WHERE departement = 'GMP';

/* 11) Supprimez l’enregistrement correspondant à l’étudiant numéro 15 */
DELETE FROM moyenne
WHERE numEtudiant=15;

DELETE FROM etudiant
WHERE num=15;